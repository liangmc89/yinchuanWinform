//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace IPNewsYinChuan.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClientHelperSoap", Namespace="http://tempuri.org/")]
    public partial class ClientHelper : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddClientScreenOperationCompleted;
        
        private ClientHelperSoapHeader clientHelperSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback UpdateClientStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVersionUpdatedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClientHelper() {
            this.Url = global::IPNewsYinChuan.Properties.Settings.Default.IPNewsYinChuan_WebReference_ClientHelper;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ClientHelperSoapHeader ClientHelperSoapHeaderValue {
            get {
                return this.clientHelperSoapHeaderValueField;
            }
            set {
                this.clientHelperSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddClientScreenCompletedEventHandler AddClientScreenCompleted;
        
        /// <remarks/>
        public event UpdateClientStatusCompletedEventHandler UpdateClientStatusCompleted;
        
        /// <remarks/>
        public event QueryVersionCompletedEventHandler QueryVersionCompleted;
        
        /// <remarks/>
        public event SetVersionUpdatedCompletedEventHandler SetVersionUpdatedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClientScreen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] AddClientScreen(string clientScreenName, string shortDescription, string HDSerialNumber, string MachineModelName, string MachineCode, string ip) {
            object[] results = this.Invoke("AddClientScreen", new object[] {
                        clientScreenName,
                        shortDescription,
                        HDSerialNumber,
                        MachineModelName,
                        MachineCode,
                        ip});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void AddClientScreenAsync(string clientScreenName, string shortDescription, string HDSerialNumber, string MachineModelName, string MachineCode, string ip) {
            this.AddClientScreenAsync(clientScreenName, shortDescription, HDSerialNumber, MachineModelName, MachineCode, ip, null);
        }
        
        /// <remarks/>
        public void AddClientScreenAsync(string clientScreenName, string shortDescription, string HDSerialNumber, string MachineModelName, string MachineCode, string ip, object userState) {
            if ((this.AddClientScreenOperationCompleted == null)) {
                this.AddClientScreenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientScreenOperationCompleted);
            }
            this.InvokeAsync("AddClientScreen", new object[] {
                        clientScreenName,
                        shortDescription,
                        HDSerialNumber,
                        MachineModelName,
                        MachineCode,
                        ip}, this.AddClientScreenOperationCompleted, userState);
        }
        
        private void OnAddClientScreenOperationCompleted(object arg) {
            if ((this.AddClientScreenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientScreenCompleted(this, new AddClientScreenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ClientHelperSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClientStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateClientStatus(int clientID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bs, int flashState) {
            object[] results = this.Invoke("UpdateClientStatus", new object[] {
                        clientID,
                        bs,
                        flashState});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientStatusAsync(int clientID, byte[] bs, int flashState) {
            this.UpdateClientStatusAsync(clientID, bs, flashState, null);
        }
        
        /// <remarks/>
        public void UpdateClientStatusAsync(int clientID, byte[] bs, int flashState, object userState) {
            if ((this.UpdateClientStatusOperationCompleted == null)) {
                this.UpdateClientStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateClientStatus", new object[] {
                        clientID,
                        bs,
                        flashState}, this.UpdateClientStatusOperationCompleted, userState);
        }
        
        private void OnUpdateClientStatusOperationCompleted(object arg) {
            if ((this.UpdateClientStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientStatusCompleted(this, new UpdateClientStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ClientHelperSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryVersion(int client) {
            object[] results = this.Invoke("QueryVersion", new object[] {
                        client});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryVersionAsync(int client) {
            this.QueryVersionAsync(client, null);
        }
        
        /// <remarks/>
        public void QueryVersionAsync(int client, object userState) {
            if ((this.QueryVersionOperationCompleted == null)) {
                this.QueryVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryVersionOperationCompleted);
            }
            this.InvokeAsync("QueryVersion", new object[] {
                        client}, this.QueryVersionOperationCompleted, userState);
        }
        
        private void OnQueryVersionOperationCompleted(object arg) {
            if ((this.QueryVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryVersionCompleted(this, new QueryVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ClientHelperSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetVersionUpdated", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetVersionUpdated(int client, string filename, int status) {
            object[] results = this.Invoke("SetVersionUpdated", new object[] {
                        client,
                        filename,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetVersionUpdatedAsync(int client, string filename, int status) {
            this.SetVersionUpdatedAsync(client, filename, status, null);
        }
        
        /// <remarks/>
        public void SetVersionUpdatedAsync(int client, string filename, int status, object userState) {
            if ((this.SetVersionUpdatedOperationCompleted == null)) {
                this.SetVersionUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVersionUpdatedOperationCompleted);
            }
            this.InvokeAsync("SetVersionUpdated", new object[] {
                        client,
                        filename,
                        status}, this.SetVersionUpdatedOperationCompleted, userState);
        }
        
        private void OnSetVersionUpdatedOperationCompleted(object arg) {
            if ((this.SetVersionUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVersionUpdatedCompleted(this, new SetVersionUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class ClientHelperSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string passWordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void AddClientScreenCompletedEventHandler(object sender, AddClientScreenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientScreenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientScreenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void UpdateClientStatusCompletedEventHandler(object sender, UpdateClientStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void QueryVersionCompletedEventHandler(object sender, QueryVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SetVersionUpdatedCompletedEventHandler(object sender, SetVersionUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVersionUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVersionUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591